version: '3.7'
services:
  php:
    build:
      context: './docker/php-${PHP_VERSION}-apache'
      dockerfile: Dockerfile
    container_name: 'phpdev'
    ports:
      - '8000:80'
    volumes:
      - './htdocs:/var/www/html'
      - './storage/data:/data'
      - './docker/php-${PHP_VERSION}-apache/apache/ports.conf:/etc/apache2/ports.conf'
      - './docker/php-${PHP_VERSION}-apache/apache/sites-available/000-default.conf:/etc/apache2/sites-available/000-default.conf'
      - './docker/php-${PHP_VERSION}-apache/php/conf.d/docker-php-ext-opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini'
      - './docker/php-${PHP_VERSION}-apache/php/conf.d/docker-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
      - './docker/php-${PHP_VERSION}-apache/php/conf.d/overrides.ini:/usr/local/etc/php/conf.d/overrides.ini'
    env_file:
      - './env/php.env'
  beanstalkd:
    build:
      context: './docker/beanstalkd'
      dockerfile: Dockerfile
    container_name: 'phpdev-beanstalkd'
    ports:
      - '11300:11300'
  redis:
    image: 'redis:${REDIS_VERSION}'
    container_name: 'phpdev-redis'
    ports:
      - '6379:6379'
    volumes:
      - './storage/redis:/data'
    entrypoint: redis-server --appendonly yes
#  postgres:
#    image: 'postgres:${POSTGRES_VERSION}'
#    container_name: 'phpdev-postgresql'
#    ports:
#      - '5432:5432'
#    volumes:
#      - './storage/postgres:/var/lib/postgresql/data'
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
#  mariadb:
#    image: 'mariadb:${MARIADB_VERSION}'
#    container_name: 'phpdev-mariadb'
#    ports:
#      - '3306:3306'
#    volumes:
#      - './storage/mariadb:/var/lib/mysql'
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
#  mysql:
#    image: 'mysql:${MYSQL_VERSION}'
#    container_name: 'phpdev-mysql'
#    ports:
#      - '3307:3306'
#    volumes:
#      - './storage/mysql:/var/lib/mysql'
#    environment:
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  tusd:
    build:
      context: './docker/tusd'
      dockerfile: Dockerfile
    container_name: 'phpdev-tusd'
    ports:
      - '10800:1080'
    volumes:
      - './storage/data:/data'
      - './htdocs/archive-digitisation:/archive-digitisation'
    env_file:
      - './env/php.env'
  cantaloupe:
    build:
      context: './docker/cantaloupe'
      dockerfile: Dockerfile
    container_name: 'phpdev-cantaloupe'
    ports:
      - '8182:8182'
    volumes:
      - './storage/data:/data'
      - './docker/cantaloupe/cantaloupe.properties:/opt/cantaloupe.properties'
#  mailhog:
#    image: 'mailhog/mailhog'
#    container_name: 'phpdev-mailhog'
#    ports:
#      - '8025:8025'
#      - '10250:1025'
#  mongo:
#    image: mongo
#    container_name: 'phpdev-mongo'
#    ports:
#      - '27017:27017'
#    volumes:
#      - './storage/mongodb:/data/db'
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
#  mongo-express:
#    image: mongo-express
#    container_name: 'phpdev-mongo-express'
#    depends_on:
#      mongo:
#        condition: service_started
#    ports:
#      - 8081:8081
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGOE_ROOT_USERNAME}
#      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGOE_ROOT_PASSWORD}
#      ME_CONFIG_MONGODB_URL: mongodb://${MONGODB_ROOT_USERNAME}:${MONGODB_ROOT_PASSWORD}@phpdev-mongo:27017/
